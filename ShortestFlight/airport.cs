//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ShortestFlight
{
    using System;
    using System.Collections.Generic;

    public partial class airport : IComparable<airport>
    {

        private static int CURRENT_Airport_NUM = 0;
        private double distance = 0;

        public airport()
        {
            increaseCANUM();
            this.routes = new HashSet<route>();
            this.routes1 = new HashSet<route>();
        }

        public int airport_ID { get; set; }
        public string airport1 { get; set; }
        public string city { get; set; }
        public string country { get; set; }
        public string airport_code { get; set; }

        public virtual ICollection<route> routes { get; set; }
        public virtual ICollection<route> routes1 { get; set; }


        public double get_distance()
        {
            return distance;
        }

        public void set_distance(double status)
        {
            distance = status;
        }

        public int CompareTo(airport r_airport)
        {
            double diff = this.distance - r_airport.distance;
            if (diff > 0)
                return 1;
            else if (diff < 0)
                return -1;
            else
                return 0;
        }
        public void increaseCANUM()
        {

            airport_ID = CURRENT_Airport_NUM++;
        }


    }
}
